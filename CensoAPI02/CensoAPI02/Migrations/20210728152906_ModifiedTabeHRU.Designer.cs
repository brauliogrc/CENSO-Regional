// <auto-generated />
using System;
using CENSO.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CensoAPI02.Migrations
{
    [DbContext(typeof(CDBContext))]
    [Migration("20210728152906_ModifiedTabeHRU")]
    partial class ModifiedTabeHRU
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CENSO.Models.Locations", b =>
                {
                    b.Property<int>("lId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("lCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("lCreationUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("lModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("lModificationUser")
                        .HasColumnType("int");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("lStatus")
                        .HasColumnType("bit");

                    b.HasKey("lId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("CENSO.Models.Question", b =>
                {
                    b.Property<int>("qId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("qCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("qCreationUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("qModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("qModificationUser")
                        .HasColumnType("int");

                    b.Property<string>("qName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<bool>("qStatus")
                        .HasColumnType("bit");

                    b.HasKey("qId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("CENSO.Models.Request", b =>
                {
                    b.Property<int>("rId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.Property<string>("rAttachement")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("rCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("rEmployeeLeader")
                        .HasColumnType("int");

                    b.Property<int>("rEmployeeType")
                        .HasColumnType("int");

                    b.Property<string>("rIssue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("rModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("rModificationUser")
                        .HasColumnType("bigint");

                    b.Property<int>("rUserId")
                        .HasColumnType("int");

                    b.Property<string>("rUserName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("rId");

                    b.HasIndex("AreaId");

                    b.HasIndex("LocationId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("StatusId");

                    b.HasIndex("ThemeId");

                    b.HasIndex("rModificationUser");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("CENSO.Models.Theme", b =>
                {
                    b.Property<int>("tId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("tCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("tCreationUser")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<DateTime>("tModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("tModificationUser")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("tName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("tStatus")
                        .HasColumnType("bit");

                    b.HasKey("tId");

                    b.ToTable("Theme");
                });

            modelBuilder.Entity("CensoAPI02.Models.AnonRequest", b =>
                {
                    b.Property<int>("arId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.Property<string>("arAttachement")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("arCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("arEmployeeType")
                        .HasColumnType("int");

                    b.Property<string>("arIssue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("arModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("arModificationUser")
                        .HasColumnType("bigint");

                    b.HasKey("arId");

                    b.HasIndex("AreaId");

                    b.HasIndex("LocationId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("StatusId");

                    b.HasIndex("ThemeId");

                    b.HasIndex("arModificationUser");

                    b.ToTable("AnonRequests");
                });

            modelBuilder.Entity("CensoAPI02.Models.AnswerStatus", b =>
                {
                    b.Property<int>("asId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnonRequestId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("asAnswer")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("asAttachement")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("asCreationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("asId");

                    b.HasIndex("AnonRequestId")
                        .IsUnique()
                        .HasFilter("[AnonRequestId] IS NOT NULL");

                    b.HasIndex("RequestId")
                        .IsUnique()
                        .HasFilter("[RequestId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("CensoAPI02.Models.Area", b =>
                {
                    b.Property<int>("aId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("aStatus")
                        .HasColumnType("bit");

                    b.HasKey("aId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("CensoAPI02.Models.HRU", b =>
                {
                    b.Property<long>("uEmployeeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("uCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("uCreationUser")
                        .HasColumnType("int");

                    b.Property<string>("uEmail")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("uModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("uModificationUser")
                        .HasColumnType("int");

                    b.Property<string>("uName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("uStatus")
                        .HasColumnType("bit");

                    b.Property<long>("uSupervisorNumber")
                        .HasColumnType("bigint");

                    b.HasKey("uEmployeeNumber");

                    b.HasIndex("LocationId");

                    b.HasIndex("RoleId");

                    b.ToTable("HRU");
                });

            modelBuilder.Entity("CensoAPI02.Models.RequestStatus", b =>
                {
                    b.Property<int>("rsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("rsStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("rsId");

                    b.ToTable("RequestStatus");
                });

            modelBuilder.Entity("CensoAPI02.Models.Roles", b =>
                {
                    b.Property<int>("rolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("rolName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("rolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CensoAPI02.Models.UnionTables.AreasLocations", b =>
                {
                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.HasKey("LocationId", "AreaId");

                    b.HasIndex("AreaId");

                    b.ToTable("AreasLocations");
                });

            modelBuilder.Entity("CensoAPI02.Models.UnionTables.HRUsersTheme", b =>
                {
                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ThemeId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("HRUsersThemes");
                });

            modelBuilder.Entity("CensoAPI02.Models.UnionTables.QuestionsTheme", b =>
                {
                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("ThemeId", "QuestionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionsThemes");
                });

            modelBuilder.Entity("CensoAPI02.UnionTables.LocationsTheme", b =>
                {
                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("ThemeId", "LocationId");

                    b.HasIndex("LocationId");

                    b.ToTable("LocationsThemes");
                });

            modelBuilder.Entity("CENSO.Models.Request", b =>
                {
                    b.HasOne("CensoAPI02.Models.Area", "area")
                        .WithMany("request")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CENSO.Models.Locations", "locations")
                        .WithMany("Request")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CENSO.Models.Question", "question")
                        .WithMany("request")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CensoAPI02.Models.RequestStatus", "requestStatus")
                        .WithMany("requests")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CENSO.Models.Theme", "theme")
                        .WithMany("Requests")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CensoAPI02.Models.HRU", "hru")
                        .WithMany("requests")
                        .HasForeignKey("rModificationUser")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("area");

                    b.Navigation("hru");

                    b.Navigation("locations");

                    b.Navigation("question");

                    b.Navigation("requestStatus");

                    b.Navigation("theme");
                });

            modelBuilder.Entity("CensoAPI02.Models.AnonRequest", b =>
                {
                    b.HasOne("CensoAPI02.Models.Area", "area")
                        .WithMany("anonRequest")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CENSO.Models.Locations", "locations")
                        .WithMany("anonRequest")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CENSO.Models.Question", "question")
                        .WithMany("anonRequest")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CensoAPI02.Models.RequestStatus", "requestStatus")
                        .WithMany("anonRequests")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CENSO.Models.Theme", "theme")
                        .WithMany("AnonRequests")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CensoAPI02.Models.HRU", "hru")
                        .WithMany("anonRequests")
                        .HasForeignKey("arModificationUser")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("area");

                    b.Navigation("hru");

                    b.Navigation("locations");

                    b.Navigation("question");

                    b.Navigation("requestStatus");

                    b.Navigation("theme");
                });

            modelBuilder.Entity("CensoAPI02.Models.AnswerStatus", b =>
                {
                    b.HasOne("CensoAPI02.Models.AnonRequest", "anonRequest")
                        .WithOne("answerStatus")
                        .HasForeignKey("CensoAPI02.Models.AnswerStatus", "AnonRequestId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CENSO.Models.Request", "request")
                        .WithOne("answerStatus")
                        .HasForeignKey("CensoAPI02.Models.AnswerStatus", "RequestId");

                    b.HasOne("CensoAPI02.Models.HRU", "hru")
                        .WithMany("answerStatus")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("anonRequest");

                    b.Navigation("hru");

                    b.Navigation("request");
                });

            modelBuilder.Entity("CensoAPI02.Models.HRU", b =>
                {
                    b.HasOne("CENSO.Models.Locations", "locations")
                        .WithMany("HRU")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CensoAPI02.Models.Roles", "roles")
                        .WithMany("hru")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("locations");

                    b.Navigation("roles");
                });

            modelBuilder.Entity("CensoAPI02.Models.UnionTables.AreasLocations", b =>
                {
                    b.HasOne("CensoAPI02.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CENSO.Models.Locations", "Locations")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("CensoAPI02.Models.UnionTables.HRUsersTheme", b =>
                {
                    b.HasOne("CENSO.Models.Theme", "Theme")
                        .WithMany()
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CensoAPI02.Models.HRU", "HRU")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRU");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("CensoAPI02.Models.UnionTables.QuestionsTheme", b =>
                {
                    b.HasOne("CENSO.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CENSO.Models.Theme", "Theme")
                        .WithMany()
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("CensoAPI02.UnionTables.LocationsTheme", b =>
                {
                    b.HasOne("CENSO.Models.Locations", "Locations")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CENSO.Models.Theme", "Theme")
                        .WithMany()
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locations");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("CENSO.Models.Locations", b =>
                {
                    b.Navigation("anonRequest");

                    b.Navigation("HRU");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("CENSO.Models.Question", b =>
                {
                    b.Navigation("anonRequest");

                    b.Navigation("request");
                });

            modelBuilder.Entity("CENSO.Models.Request", b =>
                {
                    b.Navigation("answerStatus");
                });

            modelBuilder.Entity("CENSO.Models.Theme", b =>
                {
                    b.Navigation("AnonRequests");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("CensoAPI02.Models.AnonRequest", b =>
                {
                    b.Navigation("answerStatus");
                });

            modelBuilder.Entity("CensoAPI02.Models.Area", b =>
                {
                    b.Navigation("anonRequest");

                    b.Navigation("request");
                });

            modelBuilder.Entity("CensoAPI02.Models.HRU", b =>
                {
                    b.Navigation("anonRequests");

                    b.Navigation("answerStatus");

                    b.Navigation("requests");
                });

            modelBuilder.Entity("CensoAPI02.Models.RequestStatus", b =>
                {
                    b.Navigation("anonRequests");

                    b.Navigation("requests");
                });

            modelBuilder.Entity("CensoAPI02.Models.Roles", b =>
                {
                    b.Navigation("hru");
                });
#pragma warning restore 612, 618
        }
    }
}
